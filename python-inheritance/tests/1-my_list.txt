Tests  for the print_sorted function

##################################
>>> MyList = __import__('1-my_list').MyList

Case Scenarios
==============

Valid Inheritance:
    >>> issubclass(MyList, list)
    True

List is Invalid:
    >>> MyList.print_sorted(2, 1)
    Traceback (most recent call last):
    ...
    TypeError: print_sorted() takes 1 positional argument but 2 were given
    
List is sorted:
    >>> MyList.print_sorted([1, 2, 3, 4])
    [1, 2, 3, 4]

Empty List:
    >>> MyList.print_sorted([])
    []

Only One Unsorted Element:
    >>> MyList.print_sorted([1, 2, 3, 4])
    [1, 2, 3, 4]

Reverse Order:
    >>> MyList.print_sorted([4, 3, 2, 1])
    [1, 2, 3, 4]

All Negative Intergers as Elements:
    >>> MyList.print_sorted([1, -2, 3, -4])
    [-4, -2, 1, 3]

Only One Negative Interger:
    >>> MyList.print_sorted([1, 2, -3, 4])
    [-3, 1, 2, 4]

Too Many Arguments:
    >>> MyList.print_sorted(1, 9, 5)
    Traceback (most recent call last):
    ...
    TypeError: print_sorted() takes 1 positional argument but 3 were given
